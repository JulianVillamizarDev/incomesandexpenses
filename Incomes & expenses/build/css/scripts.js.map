{"version":3,"sources":["scripts.js"],"names":["earnings","earningsList","expenses","expensesList","total","init","document","querySelector","addEventListener","inputData","setEarnings","setExpenses","totalGraph","setTotal","textContent","reduce","acumulado","earning","value","createGraph","getElementById","expense","inputEarning","description","push","showEarnings","saveLocalStorage","inputExpense","showExpenses","amount","selectType","amountValue","parseFloat","container","innerHTML","forEach","element","index","data","generateHTML","appendChild","querySelectorAll","btn","deleteData","id","dataContainer","createElement","dataDescription","dataAmount","removeData","classList","add","setAttribute","e","type","target","parentElement","children","getAttribute","toLowerCase","splice","ctx","list","dataValues","map","dataLabels","titleLabel","color","Chart","getChart","destroy","labels","datasets","label","borderWidth","borderColor","options","scales","y","beginAtZero","length","earningsData","expensesData","loadLocalStorage","JSON","parse","localStorage","getItem","earningsJSON","stringify","setItem","expensesJSON"],"mappings":"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","file":"scripts.js","sourcesContent":["//globals\r\nlet earnings = 0;\r\nlet earningsList = [];\r\nlet expenses = 0;\r\nlet expensesList = [];\r\nlet total = earnings - expenses;\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    init();\r\n\r\n    //localStorage\r\n    loadLocalStorage();\r\n})\r\n\r\nfunction init() {\r\n    const button = document.querySelector('.btn');\r\n    button.addEventListener('click', inputData);\r\n    setEarnings();\r\n    setExpenses();\r\n    totalGraph();\r\n}\r\n\r\n//===============\r\n//===SETTERS=====\r\n//===============\r\n\r\nfunction setTotal() {\r\n    total = earnings - expenses;\r\n\r\n    //html\r\n    const totalHTML = document.querySelector('.total-value');\r\n    totalHTML.textContent = `$${total}`;\r\n}\r\n\r\nfunction setEarnings() {\r\n    earnings = earningsList.reduce((acumulado, earning) => {\r\n        return acumulado + earning.value;\r\n    }, 0);\r\n\r\n    //html\r\n    const earningHTML = document.querySelector('.earning-value');\r\n    earningHTML.textContent = `$${earnings}`;\r\n\r\n    setTotal();\r\n\r\n    //create graph\r\n    \r\n    const ctx = document.getElementById('earningsGraph');\r\n    createGraph(ctx, earningsList, 'earning');\r\n}\r\n\r\nfunction setExpenses() {\r\n    expenses = expensesList.reduce((acumulado, expense) => {\r\n        return acumulado + expense.value;\r\n    }, 0);\r\n\r\n    //html\r\n    const expenseHTML = document.querySelector('.expense-value');\r\n    expenseHTML.textContent = `$${expenses}`;\r\n\r\n    setTotal();\r\n\r\n    //create graph\r\n    \r\n    const ctx = document.getElementById('expensesGraph');\r\n    createGraph(ctx, expensesList, 'expense');\r\n}\r\n\r\n//=================\r\n//=====INPUTS======\r\n//=================\r\n\r\nfunction inputEarning(value, description) {\r\n    earningsList.push({\r\n        description: description,\r\n        value: value\r\n    });\r\n\r\n    showEarnings();\r\n\r\n    saveLocalStorage()\r\n}\r\n\r\nfunction inputExpense(value, description) {\r\n    expensesList.push({\r\n        description: description,\r\n        value: value\r\n    });\r\n\r\n    showExpenses();\r\n\r\n    saveLocalStorage();\r\n}\r\n\r\nfunction inputData() {\r\n    //get values\r\n    const description = document.querySelector('#description');\r\n    const amount = document.querySelector('#amount');\r\n    const selectType = document.querySelector('#tipo');\r\n\r\n    if (description.value === '' || amount.value === '') {\r\n        return;\r\n    }\r\n\r\n    const amountValue = parseFloat(amount.value);\r\n\r\n    if (amountValue === 0) return;\r\n\r\n    switch (selectType.value) {\r\n        case 'earning': inputEarning(amountValue, description.value);\r\n            break;\r\n        case 'expense': inputExpense(amountValue, description.value);\r\n            break;\r\n    }\r\n\r\n    description.value = '';\r\n    amount.value = '';\r\n\r\n}\r\n\r\n//====================\r\n//====SHOW DATA========\r\n//====================\r\n\r\n//show earnings\r\nfunction showEarnings() {\r\n    const container = document.querySelector('.data-earning');\r\n    container.innerHTML = '';\r\n\r\n    earningsList.forEach((element, index) => {\r\n        const data = generateHTML(element.description, element.value, index);\r\n        container.appendChild(data);\r\n    });\r\n\r\n    const deleteBtn = document.querySelectorAll('.btn-delete');\r\n\r\n    deleteBtn.forEach((btn) => {\r\n        btn.addEventListener('click', deleteData);\r\n    });\r\n\r\n    setEarnings();\r\n}\r\n\r\n//show expenses\r\nfunction showExpenses() {\r\n    const container = document.querySelector('.data-expense');\r\n    container.innerHTML = '';\r\n\r\n    expensesList.forEach((element, index) => {\r\n        const data = generateHTML(element.description, element.value, index);\r\n        container.appendChild(data);\r\n    });\r\n\r\n    const deleteBtn = document.querySelectorAll('.btn-delete');\r\n    deleteBtn.forEach((btn) => {\r\n        btn.addEventListener('click', deleteData);\r\n    });\r\n\r\n    setExpenses();\r\n}\r\n\r\n//====================\r\n//====GENERATE HTML========\r\n//====================\r\n\r\nfunction generateHTML(description, value, id) {\r\n    //create components\r\n    const dataContainer = document.createElement('div');\r\n    const dataDescription = document.createElement('p');\r\n    const dataAmount = document.createElement('p');\r\n    const removeData = document.createElement('button');\r\n    //add classes\r\n    dataContainer.classList.add('data');\r\n    dataDescription.classList.add('data-description');\r\n    dataAmount.classList.add('data-amount');\r\n    removeData.classList.add('btn-delete');\r\n    //text content\r\n    dataDescription.textContent = description;\r\n    dataAmount.textContent = `$${value}`;\r\n    removeData.textContent = 'remove';\r\n    //append child into container\r\n    dataContainer.appendChild(dataDescription);\r\n    dataContainer.appendChild(dataAmount);\r\n    dataContainer.appendChild(removeData);\r\n    dataContainer.setAttribute('data-id', id)\r\n\r\n    return dataContainer;\r\n}\r\n\r\n//====================\r\n//====DELETE DATA========\r\n//====================\r\nfunction deleteData(e) {\r\n    const type = e.target.parentElement.parentElement.parentElement.children[0].textContent;\r\n    const index = e.target.parentElement.getAttribute('data-id')\r\n    if (type.toLowerCase() === 'incomes') {\r\n        earningsList.splice(index, 1);\r\n        showEarnings();\r\n    } else {\r\n        expensesList.splice(index, 1);\r\n        showExpenses();\r\n    }\r\n\r\n    saveLocalStorage();\r\n}\r\n\r\n//====================\r\n//====CREATE GRAPHS========\r\n//====================\r\n\r\nfunction createGraph(ctx, list, type) {\r\n    const dataValues = list.map( element => element.value);\r\n    const dataLabels = list.map( (element, index) => '');\r\n    let titleLabel = '';\r\n    let color = '';\r\n\r\n    //destroy an existing chart\r\n    if(type === 'earning'){\r\n        color = '#0087D4';\r\n        titleLabel = 'Incomes';\r\n        if(Chart.getChart('earningsGraph')){\r\n            Chart.getChart('earningsGraph').destroy();\r\n            \r\n        }\r\n    }else if( type === 'expense'){\r\n        titleLabel = 'Expenses';\r\n        color = '#F51000';\r\n        if(Chart.getChart('expensesGraph')){\r\n            Chart.getChart('expensesGraph').destroy();\r\n        }\r\n    }\r\n\r\n    //Create new Chart\r\n    new Chart(ctx, {\r\n        type: 'line',\r\n        data: {\r\n            labels: dataLabels,\r\n            datasets: [{\r\n                label: titleLabel,\r\n                data: dataValues,\r\n                borderWidth: 1,\r\n                borderColor: color\r\n            }]\r\n        },\r\n        options: {\r\n            scales: {\r\n                y: {\r\n                    beginAtZero: true\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n    totalGraph();\r\n}\r\n\r\n\r\nfunction totalGraph(){\r\n\r\n    if(Chart.getChart('totalGraph')){\r\n        Chart.getChart('totalGraph').destroy();   \r\n    }\r\n\r\n    const labels = earningsList.length>=expensesList.length? earningsList.map( (element, index) => '') : expensesList.map( (element, index) => '');\r\n    const earningsData = earningsList.map( element => element.value);\r\n    const expensesData = expensesList.map( element => element.value);\r\n    const ctx = document.getElementById('totalGraph');\r\n\r\n\r\n\r\n    new Chart(ctx, {\r\n        type: 'line',\r\n        data: {\r\n            labels: labels,\r\n            datasets: [{\r\n                label: 'Incomes',\r\n                data: earningsData,\r\n                borderWidth: 1,\r\n                borderColor: '#0087D4'\r\n            },\r\n            {\r\n                label: 'Expenses',\r\n                data: expensesData,\r\n                borderWidth: 1,\r\n                borderColor: '#F51000'\r\n            }\r\n            ]\r\n        },\r\n        options: {\r\n            scales: {\r\n                y: {\r\n                    beginAtZero: true\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\n//LocalStorage\r\n\r\nfunction loadLocalStorage(){\r\n    earningsList = JSON.parse( localStorage.getItem('earnings') ) || [];\r\n    showEarnings()\r\n    expensesList = JSON.parse(localStorage.getItem('expenses')) || [];\r\n    showExpenses();\r\n}\r\n\r\nfunction saveLocalStorage(){\r\n    //add into localStorage\r\n    const earningsJSON = JSON.stringify(earningsList)\r\n    localStorage.setItem('earnings', earningsJSON);\r\n\r\n    const expensesJSON = JSON.stringify(expensesList)\r\n    localStorage.setItem('expenses', expensesJSON);\r\n}\r\n\r\n\r\n"]}